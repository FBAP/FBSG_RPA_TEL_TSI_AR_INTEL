<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_transactionNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="in_Browser" Type="InArgument(ui:Browser)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>912,4260</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="35">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="72">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="700.666666666667,4195.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="IsFlatFileExist" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(of string)]" Name="ListOfFlatFiles" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_CustomerInvoice" />
      <Variable x:TypeArguments="x:String" Name="TodaysDateFolder" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message Process Start" sap:VirtualizedContainerService.HintSize="658.666666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Started Process&quot;]" />
    <ui:BrowserScope SearchScope="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" Browser="[in_Browser]" BrowserType="Chrome" DisplayName="Attach Browser 'Chrome Tsi page'" sap:VirtualizedContainerService.HintSize="658.666666666667,1556" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="8b1df6f7e7b56391a6c21df9647320fc">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do || Actions performed on TSI Portal" sap:VirtualizedContainerService.HintSize="400.666666666667,1410" sap2010:WorkflowViewState.IdRef="Sequence_27">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:SelectItem AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Select Item 'Ccustomer'" sap:VirtualizedContainerService.HintSize="358.666666666667,134" sap2010:WorkflowViewState.IdRef="SelectItem_2" Item="[in_TransactionItem]">
              <ui:SelectItem.Items>
                <scg:List x:TypeArguments="x:String" Capacity="50">
                  <x:String>All</x:String>
                  <x:String>A*STAR RESEARCH ENTITIES</x:String>
                  <x:String>ADVANCED MICRO DEVICES (SINGAPORE) PTE LTD</x:String>
                  <x:String>ADVANCED MICRO FOUNDRY PTE. LTD.</x:String>
                  <x:String>AFPD PTE LTD</x:String>
                  <x:String>ALLEGRO MICROSYSTEM PHILIPPINES, INC.</x:String>
                  <x:String>ALLEGRO MICROSYSTEMS, LLC</x:String>
                  <x:String>AMKOR TECHNOLOGY PHILIPPINES INC</x:String>
                  <x:String>AMS ASIA INC.</x:String>
                  <x:String>AMS SENSORS ASIA PTE. LTD.</x:String>
                  <x:String>ANALOG DEVICES GEN TRIAS INC.</x:String>
                  <x:String>ANALOG DEVICES SDN.BHD.</x:String>
                  <x:String>ASE ELECTRONICS (M) SDN. BHD.</x:String>
                  <x:String>ASE SINGAPORE PTE LTD</x:String>
                  <x:String>AUTOMATED TECHNOLOGY (PHIL.) INC</x:String>
                  <x:String>AVAGO TECHNOLOGIES (MALAYSIA) SDN BHD</x:String>
                  <x:String>AVAGO TECHNOLOGIES INTERNATIONAL SALES PTE LIMITED</x:String>
                  <x:String>BROADCOM INTERNATIONAL PTE LTD</x:String>
                  <x:String>BROADCOM SINGAPORE PTE LTD</x:String>
                  <x:String>CANON SINGAPORE PTE LTD</x:String>
                  <x:String>CARSEM (M) SDN BHD (124522-U)</x:String>
                  <x:String>FABRINET CO., LTD.</x:String>
                  <x:String>FEINMETALL SINGAPORE PTE LTD</x:String>
                  <x:String>FUJI ELECTRIC (MALAYSIA) SDN. BHD.</x:String>
                  <x:String>GLOBALFOUNDRIES SINGAPORE PTE. LTD.</x:String>
                  <x:String>HANA MICROELECTRONICS PUBLIC COMPANY LIMITED</x:String>
                  <x:String>HERMES-EPITEK CORPORATION PTE LTD</x:String>
                  <x:String>HP SINGAPORE (PRIVATE) LIMITED</x:String>
                  <x:String>INARI INTEGRATED SYSTEMS SDN BHD</x:String>
                  <x:String>INFINEON TECHNOLOGIES (KULIM) SDN BHD (679693-W)</x:String>
                  <x:String>INFINEON TECHNOLOGIES (PENANG) SDN. BHD.</x:String>
                  <x:String>INTEL CORPORATION</x:String>
                  <x:String>INTEL ELECTRONICS (MALAYSIA) SDN BHD</x:String>
                  <x:String>INTEL MICROELECTRONICS (M) SDN BHD</x:String>
                  <x:String>INTEL MSC SDN BHD</x:String>
                  <x:String>INTEL TECHNOLOGY ASIA PTE LTD</x:String>
                  <x:String>INTEL TECHNOLOGY SDN BHD</x:String>
                  <x:String>LIFE TECHNOLOGIES HOLDINGS PTE LTD</x:String>
                  <x:String>LUMILEDS SINGAPORE PTE LTD</x:String>
                  <x:String>MAXLINEAR ASIA SINGAPORE PRIVATE LIMITED</x:String>
                  <x:String>MICROCHIP TECHNOLOGY OPERATIONS (PHILIPPINES) CORPORATION</x:String>
                  <x:String>MICRON SEMICONDUCTOR ASIA OPERATIONS PTE. LTD.</x:String>
                  <x:String>MICRON TECHNOLOGY OPERATIONS INDIA LLP</x:String>
                  <x:String>MIMOS BERHAD</x:String>
                  <x:String>Marvell Asia Pte Ltd</x:String>
                  <x:String>NATIONAL UNIVERSITY OF SINGAPORE</x:String>
                  <x:String>NIKON (THAILAND) CO., LTD</x:String>
                  <x:String>NXP MALAYSIA SDN. BHD.</x:String>
                  <x:String>NXP MANUFACTURING (THAILAND) LTD.</x:String>
                  <x:String>ON SEMICONDUCTOR CEBU PHILIPPINES INC.</x:String>
                </scg:List>
              </ui:SelectItem.Items>
              <ui:SelectItem.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8a1f6114-3303-4d55-9081-0566f2031ded" InformativeScreenshot="94e956bffcd72914c56d670f885c643f" Selector="&lt;webctrl tag='SELECT' rowName='Customer' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SelectItem.Target>
            </ui:SelectItem>
            <ui:Check AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" DisplayName="Check 'beside the GL date'" sap:VirtualizedContainerService.HintSize="358.666666666667,106" sap2010:WorkflowViewState.IdRef="Check_1">
              <ui:Check.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8766a508-6510-428b-8671-7198cd9aec83" InformativeScreenshot="487cd0f700d5eb6fdd5de873349f4062" Selector="&lt;webctrl tag='INPUT' type='checkbox' rowName='GL Date' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Check.Target>
            </ui:Check>
            <ui:SetValue ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" AlterIfDisabled="True" DisplayName="Set Text 'GL Date From'" sap:VirtualizedContainerService.HintSize="358.666666666667,156" sap2010:WorkflowViewState.IdRef="SetValue_1" Text="[now.AddDays(-1).ToString(&quot;dd-MMM-yyyy&quot;)]">
              <ui:SetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="53920a11-c702-4221-9a72-86c0353351b5" InformativeScreenshot="0a72d5caebfb83166057a9e514577fce" Selector="&lt;webctrl tag='INPUT' name='txtFromDate' rowName='GL Date' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SetValue.Target>
            </ui:SetValue>
            <ui:SetValue ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" AlterIfDisabled="True" DisplayName="Set Text 'GL Date To'" sap:VirtualizedContainerService.HintSize="358.666666666667,156" sap2010:WorkflowViewState.IdRef="SetValue_2" Text="[now.ToString(&quot;dd-MMM-yyyy&quot;)]">
              <ui:SetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d8215b19-44aa-4f47-b5b5-28c7247a6e7b" InformativeScreenshot="1bfa3d7d802c45b903931f1e430f337d" Selector="&lt;webctrl name='txtToDate' tag='INPUT' rowName='GL Date' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SetValue.Target>
            </ui:SetValue>
            <ui:Check AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" DisplayName="Check 'Invoive details'" sap:VirtualizedContainerService.HintSize="358.666666666667,106" sap2010:WorkflowViewState.IdRef="Check_2">
              <ui:Check.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bc3f1426-04bc-46c1-86a2-1fe576983408" InformativeScreenshot="4ff3ae83c2975d31ed7231358cf0c877" Selector="&lt;webctrl tag='INPUT' rowName=' Invoice Details (Items)' type='checkbox' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Check.Target>
            </ui:Check>
            <ui:Check AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" DisplayName="Check 'Export to excel'" sap:VirtualizedContainerService.HintSize="358.666666666667,106" sap2010:WorkflowViewState.IdRef="Check_3">
              <ui:Check.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="87cd16fd-1ee3-4097-aca5-5fdf69b0ad13" InformativeScreenshot="6b9fbb1f75f723f9b867168302538b49" Selector="&lt;webctrl tag='INPUT' type='checkbox' name='chkExport' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Check.Target>
            </ui:Check>
            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Submit'" sap:VirtualizedContainerService.HintSize="358.666666666667,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0ccf1e09-ace1-4710-b191-29b08ea8ca1c" InformativeScreenshot="96fc72c084d9db2d9f46b0a865070321" Selector="&lt;webctrl tag='INPUT' aaname='           Submit          ' type='submit' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Click.Target>
            </ui:Click>
            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DisplayName="Click 'Multipledownload popup  Allow'" sap:VirtualizedContainerService.HintSize="358.666666666667,106" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="433f6c3c-73f3-46ab-8694-e0be3c0ebd9f" InformativeScreenshot="a2589041621ea79b634308d5f74afe2b" Selector="&lt;wnd aaname='* wants to: Download multiple fil*' app='chrome.exe' cls='Chrome_WidgetWin_1' omit:title='http://tsiiserp8909.asia.tel.com wants to' /&gt;&lt;ctrl name='Allow' role='push button' /&gt;" TimeoutMS="[CInt(in_Config(&quot;TimeoutforMultipleDwnldPopup&quot;))]">
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Click.Target>
            </ui:Click>
            <Delay DisplayName="Delay || to wait to complete download of flat files" Duration="[TimeSpan.FromSeconds(CInt(in_Config(&quot;DelayAfterDownloadingFile&quot;)))]" sap:VirtualizedContainerService.HintSize="358.666666666667,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BrowserScope>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke createmonthdateandoutputfolder workflow" sap:VirtualizedContainerService.HintSize="658.666666666667,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Custom Workflows\createmonthdateandoutputfolder.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
        <InOutArgument x:TypeArguments="x:String" x:Key="io_TodayDateFolderPath">[TodaysDateFolder]</InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:FileExistsX DisplayName="File Exists || Downloaded flat file" Exists="[IsFlatFileExist]" sap:VirtualizedContainerService.HintSize="658.666666666667,52.6666666666667" sap2010:WorkflowViewState.IdRef="FileExistsX_1" Path="[Directory.GetFiles(in_Config(&quot;DownloadFolderPath&quot;).ToString,in_Config(&quot;ExcelSearchPattern&quot;).ToString).AsEnumerable().Where(Function(n) n.ToLower.contains(in_Config(&quot;DwnldedFlatFileNamingConv&quot;).ToString.Replace(&quot;ddMMMyyyy&quot;,now.ToString(&quot;ddMMMyyyy&quot;)).ToLower))(0)]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:FileExistsX>
    <If Condition="[in_transactionNumber=1]" DisplayName="If || check transaction number" sap:VirtualizedContainerService.HintSize="658.666666666667,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <If Condition="[IsFlatFileExist]" DisplayName="If || Check downloade flat file existance" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence DisplayName="Moving flat files to sharedfolder" sap:VirtualizedContainerService.HintSize="376,434" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message || Msg flat file downloaded" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Info: Flat file downloaded for customer: &quot;+in_TransactionItem+&quot; and moving the file from default download folder to datemonth shared folder&quot;]" />
              <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[TodaysDateFolder]" DisplayName="Move File || from download folder to sharedfolder" sap:VirtualizedContainerService.HintSize="334,52.6666666666667" sap2010:WorkflowViewState.IdRef="MoveFile_1" Path="[Directory.GetFiles(in_Config(&quot;DownloadFolderPath&quot;).ToString,in_Config(&quot;ExcelSearchPattern&quot;).ToString).AsEnumerable().Where(Function(n) n.ToLower.contains(in_Config(&quot;DwnldedFlatFileNamingConv&quot;).ToString.Replace(&quot;ddMMMyyyy&quot;,now.ToString(&quot;ddMMMyyyy&quot;)).ToLower)).OrderByDescending(function(f) new fileinfo(f).creationtime).ToList(0)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MoveFile>
              <ui:LogMessage DisplayName="Log Message || Msg file moved successfully" sap:VirtualizedContainerService.HintSize="334,52.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Info: File moved Successfully&quot;]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <AddToCollection x:TypeArguments="x:String" Collection="[ListOfFlatFiles]" DisplayName="Add To Collection || add moved files to list to compare with next one" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[Directory.GetFiles(TodaysDateFolder,in_Config(&quot;ExcelSearchPattern&quot;).ToString).OrderByDescending(function(d) new FileInfo(d).CreationTime).ToList(0)]" />
            </Sequence>
          </If.Then>
          <If.Else>
            <Throw DisplayName="Throw || flatfile not downloaded" Exception="[New BusinessRuleException(in_Config(&quot;Excep_FlatfilenotDownloaded&quot;).ToString+in_TransactionItem)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
          </If.Else>
        </If>
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message || Msg checking conditions to remove duplicacy" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Info: checking conditions of flatfiles to remove duplicacy&quot;]" />
      </If.Else>
    </If>
    <If Condition="[IsFlatFileExist AndAlso in_transactionNumber&gt;1 AndAlso ListOfFlatFiles.AsEnumerable().Where(function(x) x.Equals(Directory.GetFiles(in_Config(&quot;DownloadFolderPath&quot;).ToString,in_Config(&quot;ExcelSearchPattern&quot;).ToString).AsEnumerable().Where(Function(n) n.ToLower.contains(in_Config(&quot;DwnldedFlatFileNamingConv&quot;).ToString.Replace(&quot;ddMMMyyyy&quot;,now.ToString(&quot;ddMMMyyyy&quot;)).ToLower)).OrderByDescending(function(f) new fileinfo(f).creationtime).ToList(0))).ToArray().Length=0]" DisplayName="If || check flatfile existance along with mapping previous file with current one " sap:VirtualizedContainerService.HintSize="658.666666666667,640" sap2010:WorkflowViewState.IdRef="If_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Moving file to shared folder" sap:VirtualizedContainerService.HintSize="376,476" sap2010:WorkflowViewState.IdRef="Sequence_17">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message || Msg flat file download status" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Info: Flat file downloaded for customer: &quot;+in_TransactionItem+&quot; and moving the file from default download folder to datemonth shared folder&quot;]" />
          <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[TodaysDateFolder]" DisplayName="Move File || from download folder to Shared folder" sap:VirtualizedContainerService.HintSize="334,52.6666666666667" sap2010:WorkflowViewState.IdRef="MoveFile_2" Path="[Directory.GetFiles(in_Config(&quot;DownloadFolderPath&quot;).ToString,in_Config(&quot;ExcelSearchPattern&quot;).ToString).AsEnumerable().Where(Function(n) n.ToLower.contains(in_Config(&quot;DwnldedFlatFileNamingConv&quot;).ToString.Replace(&quot;ddMMMyyyy&quot;,now.ToString(&quot;ddMMMyyyy&quot;)).ToLower)).OrderByDescending(function(f) new fileinfo(f).creationtime).ToList(0)]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:MoveFile>
          <ui:LogMessage DisplayName="Log Message | Msg file moved status" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Info: File moved Successfully&quot;]" />
          <AddToCollection x:TypeArguments="x:String" Collection="[ListOfFlatFiles]" DisplayName="Add To Collection || flatfiles to list for mapping with next one" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="[Directory.GetFiles(TodaysDateFolder,in_Config(&quot;ExcelSearchPattern&quot;).ToString).OrderByDescending(function(d) new FileInfo(d).CreationTime).ToList(0)]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <If Condition="[in_transactionNumber&gt;1]" DisplayName="If || check transaction number &gt;1" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Throw DisplayName="Throw || Flatfile not downloaded" Exception="[New BusinessRuleException(in_Config(&quot;Excep_FlatfilenotDownloaded&quot;).ToString+in_TransactionItem)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
          </If.Then>
          <If.Else>
            <ui:LogMessage DisplayName="Log Message || Data validation start" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Info: data validation start&quot;]" />
          </If.Else>
        </If>
      </If.Else>
    </If>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope || Open flat file" sap:VirtualizedContainerService.HintSize="658.666666666667,394" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[Directory.GetFiles(TodaysDateFolder,in_Config(&quot;ExcelSearchPattern&quot;).ToString).OrderByDescending(Function(d) New FileInfo(d).CreationTime).ToList(0)]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do || operations on flat file" sap:VirtualizedContainerService.HintSize="376,285.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_19">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message || Msg reading flat file" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Info: Reading the Flat file for Data Validation&quot;]" />
            <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_CustomerInvoice]" DisplayName="Read Range || Read flat file" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[in_Config(&quot;FlatFileSheetName&quot;).ToString]">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
            </ui:ExcelReadRange>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each || column in required column tocheck column existance" sap:VirtualizedContainerService.HintSize="658.666666666667,478.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[in_Config(&quot;RequiredColumnsinFlatFile&quot;).ToString.Split(&quot;,&quot;c)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="ReqColumn" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body || check column name existance" sap:VirtualizedContainerService.HintSize="622,350.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[(From name in dt_CustomerInvoice.Columns.Cast(of datacolumn) Select name.ColumnName).ToArray().asenumerable().where(function(c) c.Equals(ReqColumn)).toarray().length&gt;0]" DisplayName="If || check column existance in flatfiles one by one" sap:VirtualizedContainerService.HintSize="580,258.666666666667" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:LogMessage DisplayName="Log Message || Msg column name is present" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Info: column name: &quot;+reqcolumn+&quot; is present in flat file&quot;]" />
              </If.Then>
              <If.Else>
                <Throw DisplayName="Throw || column not found" Exception="[New BusinessRuleException(in_Config(&quot;Excep_ColumnNotFound&quot;).ToString.Replace(&quot;Column&quot;,ReqColumn))]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message || Msg All columns are present" sap:VirtualizedContainerService.HintSize="658.666666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Info: All the Required Columns are present in the flat file&quot;]" />
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each || column in required column list to check data existance" sap:VirtualizedContainerService.HintSize="658.666666666667,52.6666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[in_Config(&quot;RequiredColumnsinFlatFile&quot;).ToString.Split(&quot;,&quot;c)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="column" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="622,350.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[dt_CustomerInvoice.AsEnumerable.Any(function(r) not string.IsNullOrEmpty(r(column).ToString.Trim))]" DisplayName="If || check data exist in each column or not" sap:VirtualizedContainerService.HintSize="580,258.666666666667" sap2010:WorkflowViewState.IdRef="If_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:LogMessage DisplayName="Log Message || Msg data found" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Info: data is present in this column: &quot;+column]" />
              </If.Then>
              <If.Else>
                <Throw DisplayName="Throw || data not found in required column" Exception="[New BusinessRuleException(in_Config(&quot;Excep_NoDatainFlatfile&quot;).ToString+column)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message || Msg There is some data in all required columns" sap:VirtualizedContainerService.HintSize="658.666666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Info: In all Required columns Some data is available&quot;]" />
  </Sequence>
</Activity>